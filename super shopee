from tkinter import *
from tkinter import ttk, messagebox, Canvas, Frame, BOTH
from tkinter.ttk import Progressbar
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from time import sleep
import os
from random import randint
import getpass
import webbrowser
from threading import *
import requests
import tkinter

def tab_1():
    while True:
        try:
            chromeoptions = webdriver.ChromeOptions()
            if __tab_spam_view__.variable_fake_ip.get() ==  "C√≥" and len(__set_up__.key_api_tinsoft) > 0:
                get_tinsoft = requests.get("https://proxy.tinsoftsv.com/api/getProxy.php?key=" + __set_up__.key_api_tinsoft)
                proxy_drive = get_tinsoft.json()
                if proxy_drive.get("success") != True or proxy_drive.get("timeout") <=0:
                    get_tinsoft = requests.get("http://proxy.tinsoftsv.com/api/changeProxy.php?key=" + __set_up__.key_api_tinsoft + "&location=0")
                    proxy_drive = get_tinsoft.json()
                PROXY = proxy_drive.get("proxy")
                chromeoptions.add_argument('--proxy-server=%s' % PROXY)
            chromeoptions.add_experimental_option('excludeSwitches', ['enable-logging'])
            chromeoptions.add_argument("--window-size=400,650")
            browser_shopee = webdriver.Chrome(executable_path=r"chromedriver.exe", options = chromeoptions)
        except:
            messagebox.showinfo("H∆∞·ªõng d·∫´n!", "Phi√™n b·∫£n chromedriver kh√¥ng ph√π h·ª£p v·ªõi Chrome c·ªßa b·∫°n!\nVui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i trong ph·∫ßn -C√†i ƒê·∫∑t- ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n chi ti·∫øt")
            break
        browser_shopee.get(__tab_spam_view__.link_shopee.get())
        sleep(10)
        for i in range(10):
            id = randint(1, 20)
            try:
                browser_shopee.find_element_by_xpath('//*[@id="main"]/div/div[2]/div[2]/div/div[2]/div/div[2]/div/div/div/a[' + str(id) + ']').click()
                break
            except:
                sleep(0.5)
        sleep(10)
        for i in range(10):
            try:
                browser_shopee.find_element_by_xpath('//*[@id="main"]/div/div[3]/div/div/div[2]/div/div[2]/div/div[1]').click()
                break
            except:
                sleep(0.5)
        sleep(10)
        for i in range(1000):
            browser_shopee.execute_script("window.scrollTo(0, window.scrollY + 1)")
            sleep(0.0003)
        for i in range(500):
            browser_shopee.execute_script("window.scrollTo(0, window.scrollY - 1)")
            sleep(0.0001)
        for i in range(500):
            browser_shopee.execute_script("window.scrollTo(0, window.scrollY + 1)")
            sleep(0.0001)
        sleep(5)
        try:
            browser_shopee.quit()
        except:
            break

def tab_2():
    while True:
        try:
            chromeoptions = webdriver.ChromeOptions()
            if __tab_spam_distroy__.variable_fake_ip.get() ==  "C√≥" and len(__set_up__.key_api_tinsoft) > 0:
                get_tinsoft = requests.get("https://proxy.tinsoftsv.com/api/getProxy.php?key=" + __set_up__.key_api_tinsoft)
                proxy_drive = get_tinsoft.json()
                if proxy_drive.get("success") != True or proxy_drive.get("timeout") <=0:
                    get_tinsoft = requests.get("http://proxy.tinsoftsv.com/api/changeProxy.php?key=" + __set_up__.key_api_tinsoft + "&location=0")
                    proxy_drive = get_tinsoft.json()
                PROXY = proxy_drive.get("proxy")
                chromeoptions.add_argument('--proxy-server=%s' % PROXY)
            chromeoptions.add_argument("--window-size=400,650")
            chromeoptions.add_experimental_option('excludeSwitches', ['enable-logging'])
            browser = webdriver.Chrome(executable_path=r"chromedriver.exe", options = chromeoptions)
        except:
            messagebox.showinfo("H∆∞·ªõng d·∫´n!", "Phi√™n b·∫£n chromedriver kh√¥ng ph√π h·ª£p v·ªõi Chrome c·ªßa b·∫°n!\nVui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i trong ph·∫ßn -C√†i ƒê·∫∑t- ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n chi ti·∫øt")
            break

        browser.get("https://shopee.vn/")
        sleep(10)
        tim_kiem = browser.find_element_by_xpath("/html/body/div[1]/div/div[2]/div[1]/div[2]/div/div[1]/div[1]/div/form/input")
        tim_kiem.send_keys(__tab_spam_distroy__.key_shopee.get())
        sleep(10)
        tim_kiem.send_keys(Keys.ENTER)
        try:
            abc = randint(1, 4)
        except:
            abc = 1
        sleep(10)
        try:
            browser.find_element_by_xpath('//*[@id="main"]/div/div[3]/div/div[2]/div[2]/div[2]/div[' + str(abc) + ']').click()
        except:
            browser.find_element_by_xpath('//*[@id="main"]/div/div[3]/div/div[2]/div/div[2]/div[' + str(abc) + ']').click()
        for i in range(1000):
            browser.execute_script("window.scrollTo(0, window.scrollY + 1)")
            sleep(0.0003)
        for i in range(500):
            browser.execute_script("window.scrollTo(0, window.scrollY - 1)")
            sleep(0.0001)
        for i in range(500):
            browser.execute_script("window.scrollTo(0, window.scrollY + 1)")
            sleep(0.0001)
        try:
            browser.quit()
        except:
            break

def tab_4():
    try:
        chromeoptions = webdriver.ChromeOptions()
        chromeoptions.add_argument("--headless")
        chromeoptions.add_experimental_option('excludeSwitches', ['enable-logging'])
        browser = webdriver.Chrome(executable_path=r"chromedriver.exe", options = chromeoptions)
    except:
        messagebox.showinfo("H∆∞·ªõng d·∫´n!", "Phi√™n b·∫£n chromedriver kh√¥ng ph√π h·ª£p v·ªõi Chrome c·ªßa b·∫°n!\nVui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i trong ph·∫ßn -C√†i ƒê·∫∑t- ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n chi ti·∫øt")
        return

    browser.get("https://google.com/")
    sleep(3)
    tim_kiem = browser.find_element_by_name("q")
    tim_kiem.send_keys(__keyword__.link_shopee.get())
    sleep(1)
    tim_kiem.send_keys(Keys.ENTER)
    sleep(3)
    a = browser.find_elements_by_class_name("AJLUJb")
    text_1 = ""

    for i in a:
        text_1 = text_1 + i.text + "\n"

    messagebox.askokcancel("Ho√†n T·∫•t!", "Nh·ªØng t·ª´ kh√≥a ƒë∆∞·ª£c t√¨m ki·∫øm ƒëang c√≥ xu h∆∞·ªõng ph√°t tri·ªÉn l√†:\n______________________________________________\n" + text_1)

shopee = Tk()
class __set_up__():
    shopee.geometry("550x300+450+140")
    shopee.resizable(0, 0)
    try:
        shopee.iconbitmap(r"icon_shopee.ico")
    except:
        pass
    try:
        with open("C:\\Users\\" + getpass.getuser() + "\\Documents\\Super Shopee v2\\api_tinsoft.env", mode= "r") as doc_api_tinsoft:
            key_api_tinsoft = doc_api_tinsoft.read()
    except:
        key_api_tinsoft = ""
    try:
        with open("C:\\Users\\" + getpass.getuser() + "\\Documents\\Super Shopee v2\\build_login.env", mode= "r") as doc_key_login:
            try_code_key_login = doc_key_login.read()
        code_key_login = True
        shopee.title("Super Shopee")
    except:
        code_key_login = False
        shopee.title("Super Shopee (phi√™n b·∫£n mi·ªÖn ph√≠)")

shopee_tab = ttk.Notebook(shopee)
tab_spam_view = Frame(shopee_tab)
tab_spam_distroy = Frame(shopee_tab)
tab_sub = Frame(shopee_tab)
tab_keyword = Frame(shopee_tab)
tab_setting = Frame(shopee_tab)

shopee_tab.add(tab_spam_view, text = "TƒÉng View B√†i")
shopee_tab.add(tab_spam_distroy, text = "Click Q.C√°o ƒê·ªëi Th·ªß")
shopee_tab.add(tab_sub, text = "Sub & Tym")
shopee_tab.add(tab_keyword, text = "Keyword SEO")
shopee_tab.add(tab_setting, text = "C√†i ƒê·∫∑t")
shopee_tab.pack(expand = 1, fill ="both")

class __tab_spam_view__():
    x = 0
    y = 15

    line_creat = Canvas(tab_spam_view, width=550, height=300)
    line_creat.place(x = 0, y = 0)
    line_creat.create_line(0, 50, 550, 50, fill="#476042")

    Label(tab_spam_view, text = "C√¥ng d·ª•ng: TƒÉng view cho b√†i ƒëƒÉng shopee c·ªßa b·∫°n\n=> Gi√∫p c·∫£i thi·ªán th·ª© t·ª± c·ªßa b·∫°n tr√™n k·∫øt qu·∫£ t√¨m ki·∫øm.").place(x = x + 60, y = y - 5)

    def hello():
       messagebox.showinfo("H∆∞·ªõng d·∫´n!", "‚úîÔ∏èV·ªõi Ph·∫ßn m·ªÅn Super Shopee!\n______________________________\nB·∫°n c√≥ th·ªÉ ƒë·∫©y ƒë∆°n nhanh ch√≥ng, ti·∫øp c·∫≠n ngu·ªìn kh√°ch h√†ng m·ªôt c√°ch t·ª± nhi√™n, th√¥ng qua m√¥ ph·ªèng thao t√°c ng∆∞·ªùi d√πng m·ªôt c√°ch ch√¢n th·ª±c v√† ho√†n to√†n t·ª± ƒë√¥ng, t·∫°o m·ªôt ngu·ªìn traffic l·ªõn v√† ch·∫•t l∆∞·ª£ng.\n______________________________\nüëç V·ªõi c√¥ng ngh·ªá ·∫©n danh uy t√≠n t·ª´ nh·ªØng s·∫£n ph·∫©m tr∆∞·ªõc ch√∫ng t√¥i ƒë√£ ·ª©ng d·ª•ng v√†o TOOL, t·∫°o ra m·ªôt m√¥i tr∆∞·ªùng s·∫°ch, ·ªïn ƒëinh.\n- C√≥ th·ªÉ c·∫Øm t·ª± ƒë·ªông tr√™n vps, m√°y ·∫£o.\n- C√≥ th·ªÉ ƒë·ªïi ip b·∫±ng nhi·ªÅu c√°ch Dcom, Tinsoft v·ªõi ngu·ªìn ip s·∫°ch, kh√¥ng tr√πng l·∫∑p.\n=> H·ªó tr·ª£ tƒÉng traffic c√≥ th·ªÉ ƒÉn ƒë·ªÅ xu·∫•t Shopee t√¨m ki·∫øm!")

    Button(tab_spam_view, text = "H∆∞·ªõng d·∫´n", command = hello).place(x = x + 440, y = y)

    Label(tab_spam_view, text = "Nh·∫≠p link shop shopee c·∫ßn tƒÉng (Kh√¥ng ph·∫£i link b√†i vi·∫øt):").place(x = x + 10, y = y + 40)
    link_shopee = Entry(tab_spam_view)
    link_shopee.place(x = x + 14, y = y + 60, width = 500 , height = 22)

    Label(tab_spam_view, text = "Fake ip (Nh∆∞ nhi·ªÅu ng∆∞·ªùi d√πng):").place(x = x + 10, y = y + 97)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_fake_ip = StringVar(tab_spam_view)
    variable_fake_ip.set(OPTIONS[1])
    w = OptionMenu(tab_spam_view, variable_fake_ip, *OPTIONS)
    w.place(x = x + 270, y = y + 90, width = 80)

    Label(tab_spam_view, text = "ƒê·ªïi Th√¥ng tin Tr√¨nh Duy·ªát (Name, module):").place(x = x + 10, y = y + 177)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_change = StringVar(tab_spam_view)
    variable_change.set(OPTIONS[0])
    w = OptionMenu(tab_spam_view, variable_change, *OPTIONS)
    w.place(x = x + 270, y = y + 170, width = 80)

    Label(tab_spam_view, text = "L∆∞·ªõt l√™n v√† xu·ªëng (Gi·∫£ ng∆∞·ªùi xem d·ªçc b√†i):").place(x = x + 10, y = y + 137)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_scroll = StringVar(tab_spam_view)
    variable_scroll.set(OPTIONS[0])
    w = OptionMenu(tab_spam_view, variable_scroll, *OPTIONS)
    w.place(x = x + 270, y = y + 130, width = 80)

    Label(tab_spam_view, text = "Th·ªùi gian ch·ªù (Ng∆∞·ªùi d√πng ƒëang ƒë·ªçc)_(gi√¢y):").place(x = x + 10, y = y + 217)
    OPTIONS = [1 , 2 , 3 , 5 , 10 , 20 , 30]
    variable_sleep = StringVar(tab_spam_view)
    variable_sleep.set(OPTIONS[3])
    w = OptionMenu(tab_spam_view, variable_sleep, *OPTIONS)
    w.place(x = x + 270, y = y + 210, width = 80)

    Label(tab_spam_view, text= "S·ªë Lu·ªìng:").place(x = x + 410, y = y + 130, width = 80)
    box_multi = ttk.Combobox(tab_spam_view)
    box_multi["values"] = (1,2,3,4,5)
    box_multi.current(0)
    box_multi.place(x = x + 420, y = y + 155, width = 80)

    def tab_1_start():
        if __set_up__.code_key_login == True:
            if len(__tab_spam_view__.link_shopee.get()) > 0:
                multi_len = int(__tab_spam_view__.box_multi.get())
                for i in range(multi_len):
                    Thread(target= tab_1).start()
            else:
                messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ch∆∞a nh·∫≠p link shop tr√™n shopee c·ªßa b·∫°n!")
        elif __set_up__.code_key_login == False:
            messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ƒëang d√πng phi√™n b·∫£n mi·ªÖn ph√≠!\nVui l√≤ng n√¢ng c·∫•p l√™n phi√™n b·∫£n tr·∫£ ph√≠ ƒë·ªÉ s·ª≠ d·ª•ng th√™m c√°c ch·ª©c nƒÉng nh∆∞:\n- Fake ip, Fake model,...\n- Ch·∫°y ƒëa lu·ªìng.\n- Random th·ªùi gian ch·∫°y.")
            if len(__tab_spam_view__.link_shopee.get()) > 0:
                Thread(target= tab_1).start()
            else:
                messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ch∆∞a nh·∫≠p link shop tr√™n shopee c·ªßa b·∫°n!")

    Button(tab_spam_view, text = "Run", bd = 3, command = tab_1_start).place(x = x + 420, y = y + 210, width = 80)

class __tab_spam_distroy__():
    x = 0
    y = 15

    line_creat = Canvas(tab_spam_distroy, width=550, height=300)
    line_creat.place(x = 0, y = 0)
    line_creat.create_line(0, 52, 550, 52, fill="#476042")

    Label(tab_spam_distroy, text = "C√¥ng d·ª•ng: TƒÉng view cho b√†i ƒëƒÉng shopee c·ªßa b·∫°n,\nm·ªói tr√¨nh duy·ªát t·∫°o ra c√≥ ƒë·ªãa ch·ªâ ri√™ng kh√¥ng tr√πng l·∫∑p, t∆∞∆°ng t√°c nh∆∞ ng∆∞·ªùi th·∫≠t.\n=> Gi√∫p c·∫£i thi·ªán th·ª© t·ª± c·ªßa b·∫°n tr√™n k·∫øt qu·∫£ t√¨m ki·∫øm.").place(x = x + 50, y = y - 15)

    Label(tab_spam_distroy, text = "Nh·∫≠p t·ª´ kh√≥a c·∫ßn click ph√° qu·∫£ng c√°o:").place(x = x + 10, y = y + 40)
    key_shopee = Entry(tab_spam_distroy)
    key_shopee.place(x = x + 14, y = y + 60, width = 500 , height = 22)

    Label(tab_spam_distroy, text = "Fake ip (Nh∆∞ nhi·ªÅu ng∆∞·ªùi d√πng):").place(x = x + 10, y = y + 97)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_fake_ip = StringVar(tab_spam_distroy)
    variable_fake_ip.set(OPTIONS[1])
    w = OptionMenu(tab_spam_distroy, variable_fake_ip, *OPTIONS)
    w.place(x = x + 270, y = y + 90, width = 80)

    Label(tab_spam_distroy, text = "ƒê·ªïi Th√¥ng tin Tr√¨nh Duy·ªát (Name, module):").place(x = x + 10, y = y + 177)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_change = StringVar(tab_spam_distroy)
    variable_change.set(OPTIONS[0])
    w = OptionMenu(tab_spam_distroy, variable_change, *OPTIONS)
    w.place(x = x + 270, y = y + 170, width = 80)

    Label(tab_spam_distroy, text = "L∆∞·ªõt l√™n v√† xu·ªëng (Gi·∫£ ng∆∞·ªùi xem d·ªçc b√†i):").place(x = x + 10, y = y + 137)
    OPTIONS = ["C√≥","Kh√¥ng"]
    variable_scroll = StringVar(tab_spam_distroy)
    variable_scroll.set(OPTIONS[0])
    w = OptionMenu(tab_spam_distroy, variable_scroll, *OPTIONS)
    w.place(x = x + 270, y = y + 130, width = 80)

    Label(tab_spam_distroy, text = "Th·ªùi gian ch·ªù (Ng∆∞·ªùi d√πng ƒëang ƒë·ªçc)_(gi√¢y):").place(x = x + 10, y = y + 217)
    OPTIONS = [1 , 2 , 3 , 5 , 10 , 20 , 30]
    variable_sleep = StringVar(tab_spam_distroy)
    variable_sleep.set(OPTIONS[3])
    w = OptionMenu(tab_spam_distroy, variable_sleep, *OPTIONS)
    w.place(x = x + 270, y = y + 210, width = 80)

    Label(tab_spam_distroy, text= "S·ªë Lu·ªìng:").place(x = x + 410, y = y + 130, width = 80)
    box_multi = ttk.Combobox(tab_spam_distroy)
    box_multi["values"] = (1,2,3,4,5)
    box_multi.current(0)
    box_multi.place(x = x + 420, y = y + 155, width = 80)

    def tab_2_start():
        if __set_up__.code_key_login == True:
            if len(__tab_spam_distroy__.key_shopee.get()) > 0:
                multi_len = int(__tab_spam_distroy__.box_multi.get())
                for i in range(multi_len):
                    Thread(target= tab_2).start()
            else:
                messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ch∆∞a nh·∫≠p t√™n s·∫£n ph·∫©m tr√™n shopee c·ªßa b·∫°n!")
        elif __set_up__.code_key_login == False:
            messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ƒëang d√πng phi√™n b·∫£n mi·ªÖn ph√≠!\nVui l√≤ng n√¢ng c·∫•p l√™n phi√™n b·∫£n tr·∫£ ph√≠ ƒë·ªÉ s·ª≠ d·ª•ng th√™m c√°c ch·ª©c nƒÉng nh∆∞:\n- Fake ip, Fake model,...\n- Ch·∫°y ƒëa lu·ªìng.\n- Random th·ªùi gian ch·∫°y.")
            if len(__tab_spam_distroy__.key_shopee.get()) > 0:
                Thread(target= tab_2).start()
            else:
                messagebox.showinfo("Th√¥ng b√°o!" , "B·∫°n ch∆∞a nh·∫≠p t√™n s·∫£n ph·∫©m tr√™n shopee c·ªßa b·∫°n!")

    Button(tab_spam_distroy, text = "Run", bd = 3, command = tab_2_start).place(x = x + 420, y = y + 210, width = 80)

class __sub__():
    x = 0
    y = 15

    line_creat = Canvas(tab_sub, width=550, height=300)
    line_creat.place(x = 0, y = 0)
    line_creat.create_line(0, 50, 550, 50, fill="#476042")

    Label(tab_sub, text = "C√¥ng d·ª•ng: TƒÉng sub v√† tym cho shop c·ªßa b·∫°n!").place(x = x + 20, y = y)

    def hello():
       messagebox.showinfo("H∆∞·ªõng d·∫´n (Phi√™n b·∫£n th·ª≠ nghi·ªám)!", "‚úîÔ∏èV·ªõi Ph·∫ßn m·ªÅn Super Shopee!\n______________________________\nƒê√¢y ho√†n to√†n l√† sub v√† tym t·ª± nhi√™n do ng∆∞·ªùi d√πng th·ª±c hi·ªán!\nV·ªõi m·ªôt shop v√† c√≥ m·ªôt l∆∞·ª£ng sub v√† tym cao, lu√¥n l√† ƒë·ªãa ƒëi·ªÉm uy t√≠n m√† ng∆∞·ªùi d√πng lu√¥n mu·ªën mua h√†ng.\nH√£y th·ª±c hi·ªán n√≥ t·∫°i ƒë√¢y!")

    Button(tab_sub, text = "H∆∞·ªõng d·∫´n", command = hello).place(x = x + 440, y = y)

    Label(tab_sub, text = "Nh·∫≠p link shop c·ªßa b·∫°n (N·∫øu mu·ªën tƒÉng sub):").place(x = x + 10, y = y + 40)
    link_shopee = Entry(tab_sub)
    link_shopee.place(x = x + 14, y = y + 60, width = 500 , height = 22)

    Label(tab_sub, text = "Nh·∫≠p link s·∫£n ph·∫©m c·ªßa b·∫°n (N·∫øu mu·ªën tƒÉng tym):").place(x = x + 10, y = y + 85)
    link_shopee = Entry(tab_sub)
    link_shopee.place(x = x + 14, y = y + 105, width = 500 , height = 22)

    def tab_sub_start():
        if __set_up__.code_key_login == True:
            Label(tab_sub, text = "L∆∞u √Ω: Kh√¥ng ƒë∆∞·ª£c tho√°t khi ph·∫ßn m·ªÅm ƒëang ch·∫°y!").place(x =10, y =200)
            pb = Progressbar(tab_sub,orient = HORIZONTAL,length = 100,mode = 'determinate')
            pb.place(x=14, y =160, width = 454 , height = 22)
            txt = Label(tab_sub,text = '0%',bg = '#345',fg = '#fff')
            txt.place(x=468, y =160, width = 46)
            for i in range(100):
                tab_sub.update_idletasks()
                pb['value'] += 1
                sleep(0.0002)
                txt['text']= pb['value'] ,'%'
            messagebox.askokcancel("Th√¥ng b√°o!", "ƒê√£ ho√†n t·∫•t!")
        else:
            messagebox.askokcancel("Th√¥ng b√°o!", "T√≠nh nƒÉng n√†y kh√¥ng c√≥ tr√™n b·∫£n mi·ªÖn ph√≠.\nVui l√≤ng n√¢ng c·∫•p ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng n√†y!")

    Button(tab_sub, text = "Run", bd = 3, command = tab_sub_start).place(x = x + 420, y = y + 210, width = 80)

class __keyword__():
    x = 0
    y = 15

    line_creat = Canvas(tab_keyword, width=550, height=300)
    line_creat.place(x = 0, y = 0)
    line_creat.create_line(0, 50, 550, 50, fill="#476042")

    Label(tab_keyword, text = "C√¥ng d·ª•ng: Ph√¢n t√≠ch v√† ƒë∆∞a ra nh·ªØng t·ª´ kh√≥a li√™n quan t·ªõi s·∫£n ph·∫©m c·ªßa b·∫°n\n=> B·∫°n ch·ªâ vi·ªác ƒë∆∞a nh·ªØng keyword n√†y v√†o b√†i ƒëƒÉng shopee!").place(x = x + 10, y = y - 5)

    def hello():
       messagebox.showinfo("H∆∞·ªõng d·∫´n!", "‚úîÔ∏èV·ªõi Ph·∫ßn m·ªÅn Super Shopee!\n______________________________\nB·∫°n ƒëang kh√¥ng bi·∫øt vi·∫øt b√†i nh∆∞ n√†o ƒë·ªÉ ƒëƒÉng l√™n Shopee ƒë∆∞·ª£c nhi·ªÅu ng∆∞·ªùi ti·∫øp c·∫≠n\nB·∫°n c√≥ th·ªÉ l·∫•y nh·ªØng t·ª´ kh√≥a n√†y ƒë·ªÉ v√†o b√†i vi·∫øt tr√™n shopee c·ªßa b·∫°n, ng∆∞·ªùi kh√°c khi t√¨m ki·∫øm t√™n s·∫£n ph·∫©m s·∫Ω nh√¨n th·∫•y s·∫£n ph·∫©m c·ªßa b·∫°n\nNh·ªØng t·ª´ kh√≥a n√†y ƒë∆∞·ª£c c·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n!")

    Button(tab_keyword, text = "H∆∞·ªõng d·∫´n", command = hello).place(x = x + 440, y = y)

    Label(tab_keyword, text = "Nh·∫≠p t√™n s·∫£n ph·∫©m c·ªßa b·∫°n:").place(x = x + 10, y = y + 40)
    link_shopee = Entry(tab_keyword)
    link_shopee.place(x = x + 14, y = y + 60, width = 500 , height = 22)

    def tab_4_start():
        if __set_up__.code_key_login == True:
            Label(tab_keyword, text = "Vui l√≤ng ch·ªù kho·∫£ng 15s!").place(x =10, y =160)
            Label(tab_keyword, text = "L∆∞u √Ω: Kh√¥ng ƒë∆∞·ª£c tho√°t khi ph·∫ßn m·ªÅm ƒëang ch·∫°y!").place(x =10, y =200)
            Thread(target= tab_4).start()
        else:
            messagebox.askokcancel("Th√¥ng b√°o!", "Ch·ª©c nƒÉng t√¨m v√† l·ªçc t·ª´ kh√≥a kh√¥ng √°p d·ª•ng cho b·∫£n mi·ªÖn ph√≠!")

    Button(tab_keyword, text = "Run", bd = 3, command = tab_4_start).place(x = x + 420, y = y + 210, width = 80)

class __setting__():
    x = 0
    y = 15

    line_creat = Canvas(tab_setting, width=550, height=300)
    line_creat.place(x = 0, y = 0)
    line_creat.create_line(0, 50, 550, 50, fill="#476042")

    Label(tab_setting, text = "C√¥ng d·ª•ng: C√†i ƒë·∫∑t c·∫•u h√¨nh!").place(x = x + 10, y = y + 5)

    def hello():
       messagebox.showinfo("H∆∞·ªõng d·∫´n!", "‚úîÔ∏èPh·∫ßn m·ªÅm c√≥ 2 b·∫£n mi·ªÖn ph√≠ v√† m·∫•t ph√≠\nH√£y c√¢n nh·∫Øc ƒë·ªÉ mua phi√™n b·∫£n tr·∫£ ph√≠ v·ªõi ƒë·∫ßy ƒë·ªß ch·ª©c nƒÉng!\nH√£y lu√¥n ƒë·∫ßu t∆∞ ƒë·ªÉ c√≥ ƒë∆∞·ª£c c√¥ng c·ª• gi√∫p b·∫°n b√°n ƒë∆∞·ª£c nhi·ªÅu h√†ng h∆°n.)")

    Button(tab_setting, text = "H∆∞·ªõng d·∫´n", command = hello).place(x = x + 440, y = y)

    Label(tab_setting, text = "Nh·∫≠p API dcom tinsoft:").place(x = x + 10, y = y + 40)
    api_tinsoft_button = Entry(tab_setting)
    api_tinsoft_button.place(x = x + 14, y = y + 60, width = 420 , height = 22)

    Label(tab_setting, text = "Key k√≠ch ho·∫°t b·∫£n quy·ªÅn:").place(x = x + 10, y = y + 100)
    keys_shopee = Entry(tab_setting)
    keys_shopee.place(x = x + 14, y = y + 120, width = 420 , height = 22)

    def save_api_tinsoft():
        if __set_up__.code_key_login == True:
            api_tinsoft = __setting__.api_tinsoft_button.get()
            os.chdir("C:\\Users\\" + getpass.getuser() + "\\Documents")
            try:
                os.chdir("C:\\Users\\" + getpass.getuser() + "\\Documents")
                os.mkdir("Super Shopee v2")
            except:
                pass
            os.chdir("C:\\Users\\" + getpass.getuser() + "\\Documents\\Super Shopee v2")
            with open(r"api_tinsoft.env", mode= "w") as write_api_tinsoft:
                write_api_tinsoft.write(api_tinsoft)
            messagebox.showinfo("Th√¥ng b√°o!" , "Thi·∫øt l·∫≠p ho√†n t·∫•t!\nVui l√≤ng kh·ªüi ƒë·ªông l·∫°i ph·∫ßn m·ªÅm...")
        else:
            messagebox.showinfo("Th√¥ng b√°o!" , "Ch·ª©c nƒÉng Fake ip kh√¥ng d√†nh cho phi√™n b·∫£n mi·ªÖn ph√≠!")

    def kich_hoat_key():
        import requests
        keys_try = __setting__.keys_shopee.get()
        if len(keys_try) > 35:
            link_key = requests.get("https://driverweb2020.blogspot.com/2021/09/uqs38xyialittgbep0bojwbvtlcalb0fp2ljsw.html")
            requests_key = link_key.text
            if keys_try in requests_key:
                try:
                    os.chdir("C:\\Users\\" + getpass.getuser() + "\\Documents")
                    os.mkdir("Super Shopee v2")
                except:
                    pass
                os.chdir("C:\\Users\\" + getpass.getuser() + "\\Documents\\Super Shopee v2")
                with open(r"build_login.env", mode= "w") as keys:
                    keys.write("Ban quyen thuoc ve Super Shopee")
                    messagebox.showinfo("Th√¥ng b√°o!" , "K√≠ch ho·∫°t th√†nh c√¥ng!\nVui l√≤ng kh·ªüi ƒë·ªông l·∫°i ph·∫ßn m·ªÅm...")

            else:
                messagebox.showinfo("Th√¥ng b√°o!" , "Key kh√¥ng ƒë√∫ng!")
        else:
            messagebox.showinfo("Th√¥ng b√°o!" , "Key kh√¥ng ƒë√∫ng!")

    def open_facebook():
        webbrowser.open("https://www.facebook.com/kingplus6868", new = 1)

    def open_keys():
        webbrowser.open("https://bikipseotop.blogspot.com/2021/09/thanh-toan.html", new = 1)

    Button(tab_setting, text = "L∆∞u", bd = 3, command = save_api_tinsoft ).place(x = x + 420, y = y + 57, width = 90)
    Button(tab_setting, text = "K√≠ch ho·∫°t", bd = 3, command = kich_hoat_key).place(x = x + 420, y = y + 117, width = 90)
    Button(tab_setting, text = "Fanpage", bd = 3, command = open_facebook).place(x = x + 457, y = y + 232, width = 90)
    Button(tab_setting, text = "Mua key", bd = 3, command = open_keys).place(x = x + 367, y = y + 232, width = 90)
    
shopee.mainloop()
